# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:
  router.request_context.host: 'slave.shoko-cosplay.fr'
  router.request_context.scheme: 'https'
  asset.request_context.secure: true
  image_resize_key: '%env(resolve:IMAGE_RESIZE_KEY)%'
  geoip_database:   '%kernel.project_dir%/var/GeoLite2-Country.mmdb'
  asn_database:   '%kernel.project_dir%/var/GeoLite2-ASN.mmdb'
services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        public: false
        bind:
          $projectDir: '%kernel.project_dir%'
          $appEnv: '%kernel.environment%'

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
      resource: '../src/*'
      exclude: '../src/{DependencyInjection,Entity,Infrastructure/Migrations,Tests,Kernel.php}'
    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    Liip\ImagineBundle\Service\FilterService: '@liip_imagine.service.filter'

    Redis:
      lazy: true
      class: \Redis
      calls:
        - connect:
            - '%env(REDIS_HOST)%'

    Symfony\Component\HttpFoundation\Session\Storage\Handler\RedisSessionHandler:
      arguments:
        - '@Redis'

    App\Infrastructure\Pwa\PwaService:
      arguments: [ ]

    amazonS3:
      class: Aws\S3\S3Client
      factory: [Aws\S3\S3Client, 'factory']
      arguments:
        -
          version: latest
          region: "us-east-1"
          endpoint: "%env(MINIO_SERVER)%"
          use_path_style_endpoint: true
          credentials:
            key: '%env(MINIO_PUBLIC_KEY)%'
            secret: '%env(MINIO_SECRET_KEY)%'

    App\Http\Controller\:
      resource: '../src/Http/Controller'
      tags: [ 'controller.service_arguments' ]

    App\Http\Api\:
      resource: '../src/Http/Api'
      tags: [ 'controller.service_arguments' ]

    Knp\Bundle\PaginatorBundle\Helper\Processor: ~

    App\Http\Twig\TwigAssetExtension:
      arguments:
        $assetPath: '%kernel.project_dir%/public/assets'
        $env: '%kernel.environment%'

    App\Infrastructure\Queue\FailedJobsService:
      arguments: ['@messenger.transport.failed']

    App\Http\Twig\TwigUrlExtension:
      arguments:
        $uploaderHelper: '@Vich\UploaderBundle\Templating\Helper\UploaderHelper'
