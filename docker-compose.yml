services:
  web:
    image: nginx:alpine
    restart: unless-stopped
    ports:
      - 8000:80
    volumes:
      - .:/var/www:delegated
      - ./site.conf:/etc/nginx/conf.d/default.conf
    links:
      - php

  minio:
    image: bitnami/minio:latest
    ports:
      - '9000:9000'
      - '9001:9001'
    volumes:
      - 'minio_data:/bitnami/minio/data'
    environment:
      - MINIO_ROOT_USER=shokoCosplay
      - MINIO_ROOT_PASSWORD=shokoCosplay
      - MINIO_DEFAULT_BUCKETS=default
      - MINIO_DOMAIN=s3.us-east-1.amazonaws.com
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:9000/minio/health/live" ]
      interval: 30s
      timeout: 20s
      retries: 3
      start_period: 30s
    networks:
      default:
        aliases:
          - shoko-cosplay.s3.us-east-1.amazonaws.com

  vault:
    image: hashicorp/vault:latest
    volumes:
      - vault-data:/vault/config
      - vault-data:/vault/policies
      - vault-data:/vault/data
    ports:
      - "8200:8200"
    environment:
      VAULT_LOCAL_CONFIG: '{"storage": {"file": {"path": "/vault/file"}}, "listener": [{"tcp": { "address": "0.0.0.0:8200", "tls_disable": true}}], "default_lease_ttl": "168h", "max_lease_ttl": "720h", "ui": true}'
      VAULT_DEV_ROOT_TOKEN_ID: '00000000-0000-0000-0000-000000000000'
      VAULT_DEV_LISTEN_ADDRESS: '0.0.0.0:8200'
    cap_add:
      - IPC_LOCK
    command: vault server -dev -dev-root-token-id="00000000-0000-0000-0000-000000000000"
  php:
    user: '${USER_ID}:${GROUP_ID}'
    restart: unless-stopped
    image: ghcr.io/shoko-cosplay/sc-bondage-docker:master
    volumes:
      - .:/var/www:delegated
    depends_on:
      - db
      - mosquitto
      - meilisearch
      - mercure
      - bun
      - redis
    environment:
      PHP_IDE_CONFIG: serverName=shokoCosplay
      REDIS_HOST: redis
      MAILER_DSN: smtp://mail:1025?encryption=null&auth_mode=null
      DATABASE_URL: postgresql://shokoCosplay:shokoCosplay@db:5432/shokoCosplay?serverVersion=12&chartset=utf8
      MERCURE_PUBLISH_URL: http://mercure/.well-known/mercure
      MESSENGER_TRANSPORT_DSN: redis://redis:6379/messages
      MESSENGER_TRANSPORT_FAILED_DSN: redis://redis:6379/messages_failed
      MEILISEARCH_HOST: "meilisearch:7700"
  db:
    restart: unless-stopped
    image: postgres:12-alpine
    ports:
      - 5432:5432 # On expose le port pour pouvoir inspecter la base pendant la phase de d√©veloppement
    environment:
      POSTGRES_PASSWORD: shokoCosplay
      POSTGRES_USER: shokoCosplay
      POSTGRES_DB: shokoCosplay
      TZ: Europe/Paris
      PGTZ: Europe/Paris
    volumes:
      - db-data:/var/lib/postgresql/data
      - ./var:/var/www/var
  redis:
    restart: unless-stopped
    image: redis:7-alpine
    ports:
      - 6379:6379
  meilisearch:
    restart: unless-stopped
    image: getmeili/meilisearch:v1.0
    environment:
      MEILI_ENV: development
      MEILI_MASTER_KEY:
    ports:
      - 7700:7700
    volumes:
      - search-data:/meili_data
  mosquitto:
    image: eclipse-mosquitto
    restart: always
    volumes:
      - ./tools/mosquitto:/mosquitto
    ports:
      - 1883:1883
      - 8181:8080
  mercure:
    restart: unless-stopped
    image: dunglas/mercure
    environment:
      SERVER_NAME: ':80'
      MERCURE_EXTRA_DIRECTIVES: 'cors_origins http://esyweb.local:8000'
      MERCURE_SUBSCRIBER_JWT_KEY: MercureSubscriberJWTSecretForDebugPurpose
      MERCURE_PUBLISHER_JWT_KEY: MercurePublisherJWTSecretForDebugPurpose
      GLOBAL_OPTIONS: debug
    ports:
      - 8001:80
  messenger:
    user: '${USER_ID}:${GROUP_ID}'
    image: ghcr.io/shoko-cosplay/sc-bondage-docker:master
    volumes:
      - .:/var/www:delegated
    depends_on:
      - db
    restart: unless-stopped
    command: ['php', 'bin/console', 'messenger:consume', 'async', '--limit=10', '-vv']
    environment:
      MESSENGER_TRANSPORT_DSN: redis://redis:6379/messages
      MESSENGER_TRANSPORT_FAILED_DSN: redis://redis:6379/messages_failed
  # Dev tools
  docuseal:
    depends_on:
      - minio
    image: docuseal/docuseal
    volumes:
      - docuseal:/data
    ports:
      - 9999:3000
  adminer:
    image: adminer
    environment:
      APP_ENV: dev
      ADMINER_DESIGN: pepa-linha
      ADMINER_DEFAULT_SERVER: db
    ports:
      - 8888:8080
  mail:
    image: mailhog/mailhog
    ports:
      - 1080:8025
  redis-gui:
    image: rediscommander/redis-commander
    environment:
      - REDIS_HOSTS=local:redis:6379
    ports:
      - "8081:8081"
  bun:
    user: '${USER_ID}:${GROUP_ID}'
    image: oven/bun
    command: bun run dev
    working_dir: /usr/src/app
    volumes:
      - .:/usr/src/app
    ports:
      - 3000:3000

  plausible_db:
    image: postgres:16-alpine
    volumes:
      - plausible_db:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=postgres
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      start_period: 1m

  plausible_events_db:
    image: clickhouse/clickhouse-server:24.3.3.102-alpine
    volumes:
      - plausible_event_data:/var/lib/clickhouse
      - plausible_event_log:/var/log/clickhouse-server
      - ./tools/plausible/clickhouse/logs.xml:/etc/clickhouse-server/config.d/logs.xml:ro
      # This makes ClickHouse bind to IPv4 only, since Docker doesn't enable IPv6 in bridge networks by default.
      # Fixes "Listen [::]:9000 failed: Address family for hostname not supported" warnings.
      - ./tools/plausible/clickhouse/ipv4-only.xml:/etc/clickhouse-server/config.d/ipv4-only.xml:ro
      # This makes ClickHouse consume less resources, which is useful for small setups.
      # https://clickhouse.com/docs/en/operations/tips#using-less-than-16gb-of-ram
      - ./tools/plausible/clickhouse/low-resources.xml:/etc/clickhouse-server/config.d/low-resources.xml:ro
    ulimits:
      nofile:
        soft: 262144
        hard: 262144
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 -O - http://127.0.0.1:8123/ping || exit 1"]
      start_period: 1m

  plausible:
    image: ghcr.io/plausible/community-edition:v2.1.4
    command: sh -c "/entrypoint.sh db createdb && /entrypoint.sh db migrate && /entrypoint.sh run"
    depends_on:
      plausible_db:
        condition: service_healthy
      plausible_events_db:
        condition: service_healthy
    volumes:
      - plausible_data:/var/lib/plausible
    ulimits:
      nofile:
        soft: 65535
        hard: 65535
    ports:
      - 7070:8000
    environment:
      - ERL_FLAGS=+sbwt none +sbwtdcpu none +sbwtdio none
      - TMPDIR=/var/lib/plausible/tmp
      - BASE_URL=http://esyweb.local
      - SECRET_KEY_BASE=As0fZsJlUpuFYSthRjT5Yflg/NlxkFKPRro72xMLXF8yInZ60s6xGGXYVqml+XN1
      - HTTP_PORT=8000

volumes:
  docuseal:
    driver: local
  minio_data:
    driver: local
  plausible_data:
    driver: local
  plausible_event_data:
    driver: local
  plausible_event_log:
    driver: local
  plausible_db:
    driver: local
  db-data:
    driver: local
  search-data:
    driver: local
  vault-data:
    driver: local
networks:
  dev:
